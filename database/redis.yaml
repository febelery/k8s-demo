apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis
  namespace: database
  labels:
    app: redis
spec:
  capacity:          
    storage: 5Gi
  accessModes:       
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
  - hard
  - nfsvers=4.1
  nfs:               
    server: 192.168.1.7
    path: /data/nfs/redis

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: redis
  namespace: database
spec:
  resources:
    requests:
      storage: 5Gi      
  accessModes:
  - ReadWriteOnce
  selector:
    matchLabels:
      app: redis

---

kind: Service
apiVersion: v1
metadata:
  name: redis
  namespace: database
spec:
  ports:
    - name: redis
      protocol: TCP
      port: 6379
  selector:
    name: redis

---

kind: Deployment
apiVersion: apps/v1
metadata:
  name: redis
  namespace: database
spec:
  replicas: 1
  selector:
    matchLabels:
      name: redis
  template:
    metadata:
      name: redis
      labels:
        name: redis
    spec:
      containers:
      - name: redis
        image: redis:latest
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 1000m
            memory: 256Mi
        volumeMounts:
          - name: data
            mountPath: /var/lib/redis
        livenessProbe:
          exec:
            command:
              - redis-cli
              - ping
          initialDelaySeconds: 5
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
              - redis-cli
              - ping
          initialDelaySeconds: 5
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: redis