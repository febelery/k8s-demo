apiVersion: v1
kind: ConfigMap
metadata:
  name: pgsql
  namespace: database
data:
  POSTGRES_DB: pgsqldb
  POSTGRES_USER: pgsqladmin
  POSTGRES_PASSWORD: pgsqlpwd

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: pgsql
  namespace: database
spec:
  capacity:          
    storage: 40Gi
  accessModes:       
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
  - hard
  - nfsvers=4.1    
  nfs:
    server: 192.168.1.7
    path: /data/nfs/pgsql

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pgsql
  namespace: database
spec:
  resources:
    requests:
      storage: 40Gi 
  accessModes:
  - ReadWriteOnce

---

kind: Deployment
apiVersion: apps/v1
metadata:
  name: pgsql
  namespace: database
spec:
  replicas: 1
  selector:
    matchLabels:
      name: pgsql
  template:
    metadata:
      name: pgsql
      labels:
        name: pgsql
    spec:
      containers:
      - name: pgsql
        image: postgres:latest
        ports:
        - containerPort: 5432
        envFrom:
        - configMapRef:
            name: pgsql
        resources: 
          requests:
            cpu: 2
            memory: 256Mi
          limits:
            cpu: 2
            memory: 1Gi
        livenessProbe:
          exec:
            command: ["pg_isready","-h","localhost","-U","postgres"]
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command: ["pg_isready","-h","localhost","-U","postgres"]
          initialDelaySeconds: 5
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: pgsql

---

kind: Service
apiVersion: v1
metadata:
  name: pgsql
  namespace: database
spec:
  ports:
    - name: pgsql
      protocol: TCP
      port: 5432
  selector:
    name: pgsql
---

# apiVersion: traefik.containo.us/v1alpha1
# kind: IngressRouteTCP
# metadata:
#   name: pgsql-traefik-tcp
#   namespace: database
# spec:
#   entryPoints:
#   - pgsql
#   routes:
#   - match: HostSNI(`*`)
#     services:
#     - name: pgsql
#       port: 5432
